#Test for a function that divides all elements in the matrix

>>> string_matrix = [["way", "Everygreen", "day"], ["let", "my people", "go"], ["do", "hard", "things"]]
>>> unbalanced_row = [[3, 6, 8, 10], [5, 6], [5, 6, 8]]
>>> pure_int = [[4, 4, 6], [4, 10, 8], [10, 4, 6]]
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Pure int
>>> matrix_divided(pure_int, 2)
[[2.0, 2.0, 3.0], [2.0, 5.0, 4.0], [5.0, 2.0, 3.0]]

When Mx is divided by 0
>>> matrix_divided(pure_int, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

When matrix has different rows
>>> matrix_divided(unbalanced_row, 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


>>> matrix_divided([5, "number", 6], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided(string_matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
